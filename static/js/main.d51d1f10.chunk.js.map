{"version":3,"sources":["redux/auth/authOperations.js","redux/auth/authSelectors.js","redux/phone/phonebookActions.js","redux/auth/authReducer.js","redux/auth/authActions.js","routes.js","components/Navigation.js","components/UserMenu.js","components/AppBar.js","components/Section.js","components/PublicRoute.js","components/PrivateRoute.js","components/App.js","redux/phone/phoneReducer.js","redux/store.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","registerRequest","post","data","registerSuccess","registerError","logOut","logoutRequest","logoutSuccess","logoutError","logIn","loginRequest","loginSuccess","loginError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","then","getCurrentUserSuccess","catch","error","getCurrentUserError","isAuthenticated","state","getUserName","user","name","addContactsRequest","createAction","addContactsSuccess","addContactsError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactsRequest","removeContactsSuccess","removeContactsError","changeFilter","initialUserState","email","createReducer","_","payload","combineReducers","path","label","exact","component","lazy","private","restricted","Navigation","routes","map","route","key","to","className","activeClassName","styles","container","display","alignItems","img","marginRight","connect","authSelectors","avatar","onLogout","authOperations","style","src","alt","width","type","onClick","header","justifyContent","Section","children","Component","routeProps","render","props","App","this","onGetCurrentUser","fallback","items","action","newContact","filter","contact","id","authPersistConfig","storage","whitelist","store","configureStore","reducer","contacts","phoneReducer","persistReducer","authReducer","persistor","persistStore","ReactDOM","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d51d1f10.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport authActions from './authActions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n    dispatch(authActions.registerSuccess(data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n\r\n    token.set(data.token);\r\n    dispatch(authActions.loginSuccess(data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  axios\r\n    .get('/users/current')\r\n    .then(({ data }) => dispatch(authActions.getCurrentUserSuccess(data)))\r\n    .catch(error => authActions.getCurrentUserError(error));\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n  try {\r\n    const { data } = await axios.post('/users/logout');\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess(data));\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error));\r\n  }\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","const isAuthenticated = state => state.auth.token;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport default { isAuthenticated, getUserName };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContactsRequest = createAction('contacts/addRequest');\r\nexport const addContactsSuccess = createAction('contacts/addSuccess');\r\nexport const addContactsError = createAction('contacts/addError');\r\n\r\nexport const fetchContactsRequest = createAction('contacts/fetchRequest');\r\nexport const fetchContactsSuccess = createAction('contacts/fetchSuccess');\r\nexport const fetchContactsError = createAction('contacts/fetchError');\r\n\r\nexport const removeContactsRequest = createAction('contacts/removeRequest');\r\nexport const removeContactsSuccess = createAction('contacts/removeSuccess');\r\nexport const removeContactsError = createAction('contacts/removeError');\r\n\r\nexport const changeFilter = createAction('phonebook/filter');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { lazy } from 'react';\r\n\r\nexport default [\r\n  {\r\n    path: '/',\r\n    label: 'Home',\r\n    exact: true,\r\n    component: lazy(() => import('./views/Home')),\r\n    private: false,\r\n    restricted: false,\r\n  },\r\n  {\r\n    path: '/register',\r\n    label: 'Register',\r\n    exact: true,\r\n    component: lazy(() => import('./views/Register')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/login',\r\n    label: 'Login',\r\n    exact: true,\r\n    component: lazy(() => import('./views/Login')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/contacts',\r\n    label: 'Contacts',\r\n    exact: true,\r\n    component: lazy(() => import('./views/Contacts')),\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n];\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport routes from '../routes';\r\n\r\nconst Navigation = () => (\r\n  <nav>\r\n    {routes.map(route => (\r\n      <NavLink\r\n        exact={route.exact}\r\n        key={route.label}\r\n        to={route.path}\r\n        className=\"nav\"\r\n        activeClassName=\"active-nav\"\r\n      >\r\n        {route.label}\r\n      </NavLink>\r\n    ))}\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../redux/auth';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  img: {\r\n    marginRight: '10px',\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div style={styles.container}>\r\n    <img style={styles.img} src={avatar} alt=\"\" width=\"32\" />\r\n    <span> Welcome, {name}</span>\r\n    <button type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUserName(state),\r\n  avatar:\r\n    'https://cdn.pixabay.com/photo/2014/04/02/14/10/female-306407_960_720.png',\r\n});\r\n\r\nexport default connect(mapStateToProps, { onLogout: authOperations.logOut })(\r\n  UserMenu,\r\n);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n};\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header style={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated && <UserMenu />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport AppBar from './AppBar';\r\n\r\nfunction Section({ children }) {\r\n  return (\r\n    <section>\r\n      <AppBar />\r\n      <hr />\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to=\"/contacts\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Component, Suspense } from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Section from './Section';\r\nimport PublicRoute from './PublicRoute';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport routes from '../routes';\r\nimport { authOperations } from '../redux/auth';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Section>\r\n          <Suspense fallback={<h1>Loading...</h1>}>\r\n            <Switch>\r\n              {routes.map(route =>\r\n                route.private ? (\r\n                  <PrivateRoute key={route.label} {...route} />\r\n                ) : (\r\n                  <PublicRoute key={route.label} {...route} />\r\n                ),\r\n              )}\r\n            </Switch>\r\n          </Suspense>\r\n        </Section>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, {\r\n  onGetCurrentUser: authOperations.getCurrentUser,\r\n})(App);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  addContactsSuccess,\r\n  changeFilter,\r\n  fetchContactsSuccess,\r\n  removeContactsSuccess,\r\n} from './phonebookActions';\r\n\r\nconst onAddContact = (state, action) => {\r\n  const newContact = action.payload;\r\n  return [...state, newContact];\r\n};\r\n\r\nconst onRemoveContact = (state, action) =>\r\n  state.filter(contact => contact.id !== action.payload);\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (state, action) => action.payload,\r\n  [addContactsSuccess]: onAddContact,\r\n  [removeContactsSuccess]: onRemoveContact,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport phoneReducer from './phone/phoneReducer';\r\nimport authReducer from './auth/authReducer';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: phoneReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n});\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport App from './components/App';\nimport { store, persistor } from './redux/store';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}