{"version":3,"sources":["components/Navigation.js","components/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/Section.js","components/PublicRoute.js","components/PrivateRoute.js","routes.js","components/App.js","redux/phone/phoneReducer.js","redux/store.js","index.js","redux/auth/authOperations.js","redux/auth/authSelectors.js","redux/phone/phonebookActions.js","redux/auth/authReducer.js","redux/auth/authActions.js"],"names":["connect","state","isAuthenticated","authSelectors","to","exact","className","activeClassName","styles","marginRight","name","getUserName","avatar","onLogout","authOperations","logOut","style","src","alt","width","Button","variant","size","color","onClick","AuthNav","container","display","alignItems","header","justifyContent","Section","children","Component","component","routeProps","render","props","restricted","path","label","lazy","private","App","this","onGetCurrentUser","fallback","CircularProgress","routes","map","route","key","getCurrentUser","items","createReducer","fetchContactsSuccess","action","payload","addContactsSuccess","newContact","removeContactsSuccess","filter","contact","id","changeFilter","combineReducers","authPersistConfig","storage","whitelist","store","configureStore","reducer","contacts","phoneReducer","auth","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PERSIST","REGISTER","persistor","persistStore","ReactDOM","loading","document","getElementById","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","registerRequest","post","data","registerSuccess","registerError","logoutRequest","logoutSuccess","logoutError","logIn","loginRequest","loginSuccess","loginError","alert","getState","persistedToken","getCurrentUserRequest","get","then","getCurrentUserSuccess","catch","error","getCurrentUserError","user","addContactsRequest","createAction","addContactsError","fetchContactsRequest","fetchContactsError","removeContactsRequest","removeContactsError","initialUserState","email","_"],"mappings":"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","file":"static/js/main.1d0113cc.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\n\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n    <NavLink to=\"/\" exact className=\"nav\" activeClassName=\"active-nav\">\r\n      <HomeIcon /> <span>Home</span>\r\n    </NavLink>\r\n\r\n    {isAuthenticated && (\r\n      <NavLink to=\"/contacts\" className=\"nav\" activeClassName=\"active-nav\">\r\n        <PeopleIcon /> <span>Contacts</span>\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { authSelectors, authOperations } from '../redux/auth';\r\n\r\nconst styles = {\r\n  marginRight: '10px',\r\n};\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <>\r\n    <img style={styles} src={avatar} alt=\"\" width=\"32\" />\r\n    <span style={styles}> Welcome, {name}</span>\r\n    <Button\r\n      variant=\"contained\"\r\n      size=\"small\"\r\n      color=\"secondary\"\r\n      onClick={onLogout}\r\n    >\r\n      Logout\r\n    </Button>\r\n  </>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUserName(state),\r\n  avatar:\r\n    'https://cdn.pixabay.com/photo/2014/04/02/14/10/female-306407_960_720.png',\r\n});\r\n\r\nexport default connect(mapStateToProps, { onLogout: authOperations.logOut })(\r\n  UserMenu,\r\n);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\n\r\nconst AuthNav = () => (\r\n  <>\r\n    <NavLink to=\"/register\" className=\"nav\" activeClassName=\"active-nav\">\r\n      <PersonAddIcon />\r\n      <span> Register</span>\r\n    </NavLink>\r\n    <NavLink to=\"/login\" className=\"nav\" activeClassName=\"active-nav\">\r\n      <LockIcon />\r\n      <span>Login</span>\r\n    </NavLink>\r\n  </>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { authSelectors } from '../redux/auth';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n};\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header style={styles.header}>\r\n    <Navigation />\r\n\r\n    <div style={styles.container}>\r\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n    </div>\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport AppBar from './AppBar';\r\n\r\nfunction Section({ children }) {\r\n  return (\r\n    <section>\r\n      <AppBar />\r\n      <hr />\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to=\"/contacts\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import { lazy } from 'react';\r\n\r\nexport default [\r\n  {\r\n    path: '/',\r\n    label: 'Home',\r\n    exact: true,\r\n    component: lazy(() => import('./views/Home')),\r\n    private: false,\r\n    restricted: false,\r\n  },\r\n  {\r\n    path: '/register',\r\n    label: 'Register',\r\n    exact: true,\r\n    component: lazy(() => import('./views/Register')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/login',\r\n    label: 'Login',\r\n    exact: true,\r\n    component: lazy(() => import('./views/Login')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/contacts',\r\n    label: 'Contacts',\r\n    exact: true,\r\n    component: lazy(() => import('./views/Contacts')),\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n];\r\n","import React, { Component, Suspense } from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport Section from './Section';\r\nimport PublicRoute from './PublicRoute';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport routes from '../routes';\r\nimport { authOperations } from '../redux/auth';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Section>\r\n          <Suspense\r\n            fallback={\r\n              <h1>\r\n                <CircularProgress />\r\n              </h1>\r\n            }\r\n          >\r\n            <Switch>\r\n              {routes.map(route =>\r\n                route.private ? (\r\n                  <PrivateRoute key={route.label} {...route} />\r\n                ) : (\r\n                  <PublicRoute key={route.label} {...route} />\r\n                ),\r\n              )}\r\n            </Switch>\r\n          </Suspense>\r\n        </Section>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, {\r\n  onGetCurrentUser: authOperations.getCurrentUser,\r\n})(App);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  addContactsSuccess,\r\n  changeFilter,\r\n  fetchContactsSuccess,\r\n  removeContactsSuccess,\r\n} from './phonebookActions';\r\n\r\nconst onAddContact = (state, action) => {\r\n  const newContact = action.payload;\r\n  return [...state, newContact];\r\n};\r\n\r\nconst onRemoveContact = (state, action) =>\r\n  state.filter(contact => contact.id !== action.payload);\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (state, action) => action.payload,\r\n  [addContactsSuccess]: onAddContact,\r\n  [removeContactsSuccess]: onRemoveContact,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  PERSIST,\r\n  REGISTER,\r\n  REHYDRATE,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport phoneReducer from './phone/phoneReducer';\r\nimport authReducer from './auth/authReducer';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: phoneReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PERSIST, REGISTER],\r\n    },\r\n  }),\r\n});\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport App from './components/App';\nimport { store, persistor } from './redux/store';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n","import axios from 'axios';\r\n\r\nimport authActions from './authActions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n    dispatch(authActions.registerSuccess(data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n\r\n    token.set(data.token);\r\n    dispatch(authActions.loginSuccess(data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error));\r\n    alert('Incorrect login or password');\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  axios\r\n    .get('/users/current')\r\n    .then(({ data }) => dispatch(authActions.getCurrentUserSuccess(data)))\r\n    .catch(error => authActions.getCurrentUserError(error));\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n  try {\r\n    const { data } = await axios.post('/users/logout');\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess(data));\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error));\r\n  }\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","const isAuthenticated = state => state.auth.token;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport default { isAuthenticated, getUserName };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContactsRequest = createAction('contacts/addRequest');\r\nexport const addContactsSuccess = createAction('contacts/addSuccess');\r\nexport const addContactsError = createAction('contacts/addError');\r\n\r\nexport const fetchContactsRequest = createAction('contacts/fetchRequest');\r\nexport const fetchContactsSuccess = createAction('contacts/fetchSuccess');\r\nexport const fetchContactsError = createAction('contacts/fetchError');\r\n\r\nexport const removeContactsRequest = createAction('contacts/removeRequest');\r\nexport const removeContactsSuccess = createAction('contacts/removeSuccess');\r\nexport const removeContactsError = createAction('contacts/removeError');\r\n\r\nexport const changeFilter = createAction('phonebook/filter');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n"],"sourceRoot":""}