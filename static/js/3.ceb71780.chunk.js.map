{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","redux/phone/phoneOperations.js","components/ContactEditor.js","redux/phone/phoneSelectors.js","components/Filter.js","components/ContactListItem.js","components/ContactList.js","views/Contacts.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","axios","defaults","baseURL","addContact","name","number","dispatch","a","addContactsRequest","post","data","addContactsSuccess","addContactsError","fetchContacts","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","removeContact","id","removeContactsRequest","delete","removeContactsSuccess","removeContactsError","NotUnicName","allContacts","newName","find","contact","ContactEditor","state","handleChange","value","props","items","alert","setState","handleSubmit","e","preventDefault","onAddContact","this","onSubmit","htmlFor","type","onChange","Component","mapDispatchToProps","phoneOperations","connect","contacts","getContacts","getFilter","getVisibleContacts","createSelector","toLowerCase","includes","getContactById","contactId","item","onChangeFilter","changeFilter","phoneSalectors","ownProps","phoneSelectors","onRemove","className","onClick","map","Contacts","onFetchContacts"],"mappings":"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","file":"static/js/3.ceb71780.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import axios from 'axios';\r\n\r\nimport {\r\n  addContactsError,\r\n  addContactsSuccess,\r\n  addContactsRequest,\r\n  fetchContactsRequest,\r\n  fetchContactsError,\r\n  fetchContactsSuccess,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n} from './phonebookActions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst addContact = ({ name, number }) => async dispatch => {\r\n  dispatch(addContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/contacts', {\r\n      name,\r\n      number,\r\n    });\r\n    dispatch(addContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactsError(error));\r\n  }\r\n};\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nconst removeContact = id => async dispatch => {\r\n  dispatch(removeContactsRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(removeContactsSuccess(id));\r\n  } catch (error) {\r\n    dispatch(removeContactsError(error));\r\n  }\r\n};\r\n\r\nexport default { addContact, fetchContacts, removeContact };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport phoneOperations from '../redux/phone/phoneOperations';\r\n\r\nconst NotUnicName = (allContacts, newName) => {\r\n  return allContacts.find(contact => contact.name === newName);\r\n};\r\n\r\nclass ContactEditor extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    const isNotUnic = NotUnicName(this.props.items, value);\r\n    if (isNotUnic) {\r\n      alert(`${value} is already in contacts!!!`);\r\n    } else\r\n      this.setState({\r\n        [name]: value,\r\n      });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onAddContact(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <h2>Phonebook</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"name\">\r\n            Name\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              name=\"name\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"number\">\r\n            Number\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              name=\"number\"\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return state.contacts;\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: phoneOperations.addContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactEditor);\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.items;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getFilter, getContacts],\r\n  (filter, contacts) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n\r\nconst getContactById = (state, contactId) => {\r\n  const contacts = getContacts(state);\r\n  return contacts.find(item => item.id === contactId);\r\n};\r\n\r\nexport default { getVisibleContacts, getFilter, getContacts, getContactById };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { changeFilter } from '../redux/phone/phonebookActions';\r\nimport phoneSalectors from '../redux/phone/phoneSelectors';\r\n\r\nconst Filter = ({ contacts, value, onChangeFilter }) => {\r\n  if (contacts.length > 0) {\r\n    return (\r\n      <div>\r\n        <span>Find name</span>\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={e => onChangeFilter(e.target.value)}\r\n        />\r\n      </div>\r\n    );\r\n  } else return null;\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n  value: phoneSalectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: changeFilter,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport phoneOperations from '../redux/phone/phoneOperations';\r\nimport phoneSelectors from '../redux/phone/phoneSelectors';\r\n\r\nconst ContactListItem = ({ name, number, onRemove }) => (\r\n  <li>\r\n    <span>\r\n      {name}: {number}\r\n    </span>\r\n    <button type=\"button\" className=\"deleteBtn\" onClick={onRemove}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...phoneSelectors.getContactById(state, ownProps.id),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onRemove: () => dispatch(phoneOperations.removeContact(ownProps.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ContactListItem from './ContactListItem';\r\nimport phoneSelectors from '../redux/phone/phoneSelectors';\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  if (contacts.length > 0) {\r\n    return (\r\n      <ul>\r\n        {contacts.map(({ id }) => (\r\n          <ContactListItem key={id} id={id} />\r\n        ))}\r\n      </ul>\r\n    );\r\n  } else return null;\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: phoneSelectors.getVisibleContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ContactEditor from '../components/ContactEditor';\r\nimport Filter from '../components/Filter';\r\nimport ContactList from '../components/ContactList';\r\n\r\nimport phoneOperations from '../redux/phone/phoneOperations';\r\n// import phoneSelectors from '../redux/phone/phoneSelectors';\r\n// import { authSelectors } from '../redux/auth';\r\n\r\nclass Contacts extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ContactEditor />\r\n        {/* {this.props.isLoadingContacts && <h1>Doing HTTP stuff...</h1>} */}\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => ({\r\n//   // isLoadingContacts: phoneSelectors.getLoading(state),\r\n//   isAuthenticated: authSelectors(state),\r\n// });\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchContacts: phoneOperations.fetchContacts,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Contacts);\r\n"],"sourceRoot":""}